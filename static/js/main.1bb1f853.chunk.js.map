{"version":3,"sources":["components/timer/timer.js","components/countdown-input/countdown-input.js","components/countdown/countdown.js","App.js","index.js","logo.png"],"names":["Timer","state","isPaused","startTime","Date","now","period","elapsedTime","onMainButtonClick","poll","setInterval","tick","setState","prevState","clearInterval","onResetClick","this","mainButtonLabel","milliseconds","toString","slice","seconds","Math","floor","minutes","className","length","type","onClick","React","Component","CountdownInput","props","inputValue1","onInputChange","min","max","style","margin","value","onChange","tooltipVisible","step","defaultProps","Countdown","percent","TabPane","Tabs","App","src","logo","alt","defaultActiveKey","tab","ClockCircleOutlined","key","RocketOutlined","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1bb1f853.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\n\nimport './timer.scss';\n\nclass Timer extends React.Component {\n  state = {\n    isPaused: true,\n    startTime: Date.now(),\n    period: '000',\n    elapsedTime: 0,\n  };\n\n  onMainButtonClick = () => {\n    const { isPaused } = this.state;\n\n    if (isPaused === true) {\n      this.poll = setInterval(this.tick, 57);\n      this.setState({\n        startTime: Date.now(),\n      });\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n      }));\n    }\n\n    if (isPaused === false) {\n      clearInterval(this.poll);\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n        elapsedTime: prevState.period,\n      }));\n    }\n\n    this.setState((prevState) => ({\n      isPaused: !prevState.isPaused,\n    }));\n  };\n\n  onResetClick = () => {\n    const { isPaused } = this.state;\n\n    if (isPaused === false) {\n      clearInterval(this.poll);\n      this.setState((prevState) => ({\n        period: prevState.period,\n        elapsedTime: prevState.period,\n        isPaused: true,\n      }));\n    }\n\n    if (isPaused === true) {\n      this.setState({\n        period: '000',\n        elapsedTime: 0,\n      });\n    }\n  };\n\n  tick = () => {\n    this.setState((prevState) => ({\n      period: prevState.elapsedTime + (Date.now() - prevState.startTime),\n    }));\n  };\n\n  render() {\n    const { isPaused, period } = this.state;\n\n    const mainButtonLabel = isPaused ? 'Start' : 'Pause';\n    const milliseconds = period.toString().slice(-3);\n    const seconds = Math.floor((period / 1000) % 60);\n    const minutes = Math.floor(((period / 1000) % (60 * 60)) / 60);\n\n    return (\n      <div className=\"timer-container\">\n        <div className=\"display\">\n          <span>{minutes < 10 ? `0${minutes}` : minutes}</span>\n          <span>\n            :\n            {seconds < 10 ? `0${seconds}` : seconds}\n          </span>\n          <span>\n            :\n            {milliseconds.length < 3 ? `0${milliseconds}` : milliseconds}\n          </span>\n        </div>\n\n        <Button type=\"primary\" onClick={this.onMainButtonClick} className=\"button\">\n          {mainButtonLabel}\n        </Button>\n        <Button type=\"primary\" onClick={this.onResetClick} className=\"button\">\n          Reset\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slider, InputNumber } from 'antd';\n\nimport './countdown-input.scss';\n\nconst CountdownInput = (props) => {\n  const { inputValue1, onInputChange } = props;\n  return (\n    <div className=\"countdown-input-container\">\n      <InputNumber\n        min={0}\n        max={720}\n        style={{ margin: '0 16px' }}\n        value={Math.floor(inputValue1 / 60)}\n        onChange={onInputChange}\n      />\n      <InputNumber\n        min={0}\n        max={60}\n        style={{ margin: '0 16px' }}\n        value={inputValue1 % 60}\n        onChange={onInputChange}\n      />\n      <Slider\n        tooltipVisible={false}\n        step={15}\n        min={0}\n        max={3600}\n        onChange={onInputChange}\n        value={typeof inputValue1 === 'number' ? inputValue1 : 0}\n      />\n    </div>\n  );\n};\n\nCountdownInput.defaultProps = {\n  inputValue1: 0,\n  onInputChange: () => {},\n};\n\nCountdownInput.propTypes = {\n  inputValue1: PropTypes.number,\n  onInputChange: PropTypes.func,\n};\n\nexport default CountdownInput;\n","import React from 'react';\nimport { Button, Progress } from 'antd';\nimport CountdownInput from '../countdown-input/countdown-input';\n\nimport './countdown.scss';\n\nclass Countdown extends React.Component {\n  state = {\n    inputValue1: 0,\n    isPaused: true,\n    startTime: Date.now(),\n    period: '000',\n    elapsedTime: 0,\n  };\n\n  onInputChange = (value) => {\n    this.setState({\n      inputValue1: value,\n    });\n  };\n\n  onMainButtonClick = () => {\n    const { isPaused } = this.state;\n\n    if (isPaused === true) {\n      this.poll = setInterval(this.tick, 57);\n      this.setState({\n        startTime: Date.now(),\n      });\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n      }));\n    }\n\n    if (isPaused === false) {\n      clearInterval(this.poll);\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n        elapsedTime: prevState.period,\n      }));\n    }\n\n    this.setState((prevState) => ({\n      isPaused: !prevState.isPaused,\n    }));\n  };\n\n  onResetClick = () => {\n    const { isPaused } = this.state;\n\n    if (isPaused === false) {\n      clearInterval(this.poll);\n      this.setState((prevState) => ({\n        period: prevState.period,\n        elapsedTime: prevState.period,\n        isPaused: true,\n      }));\n    }\n\n    if (isPaused === true) {\n      this.setState({\n        period: '000',\n        elapsedTime: 0,\n      });\n    }\n  };\n\n  tick = () => {\n    const { period, inputValue1 } = this.state;\n    if (period >= inputValue1) {\n      clearInterval(this.poll);\n    }\n    this.setState((prevState) => ({\n      period: Math.floor(prevState.elapsedTime + (Date.now() - prevState.startTime) / 1000),\n    }));\n  };\n\n  render() {\n    const { isPaused, inputValue1, period } = this.state;\n    const mainButtonLabel = isPaused ? 'Start' : 'Pause';\n\n    return (\n      <div className=\"countdown-container\">\n        <div className=\"countdown-result\">\n          <div className=\"display\">\n            {`${Math.floor((inputValue1 - period) / 60)}:${\n              (inputValue1 - period) % 60\n            }`}\n          </div>\n          <Progress type=\"circle\" percent={Math.floor((100 * period) / inputValue1)} />\n        </div>\n        <CountdownInput inputValue1={inputValue1} onInputChange={this.onInputChange} />\n        <Button type=\"primary\" onClick={this.onMainButtonClick} className=\"button\">\n          {mainButtonLabel}\n        </Button>\n        <Button type=\"primary\" onClick={this.onResetClick} className=\"button\">\n          Reset\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Countdown;\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport { ClockCircleOutlined, RocketOutlined } from '@ant-design/icons';\nimport logo from './logo.png';\nimport './App.scss';\nimport Timer from './components/timer/timer';\nimport Countdown from './components/countdown/countdown';\n\nconst { TabPane } = Tabs;\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    </header>\n\n    <Tabs defaultActiveKey=\"2\">\n      <TabPane\n        tab={(\n          <span>\n            <ClockCircleOutlined />\n            Timer\n          </span>\n        )}\n        key=\"1\"\n      >\n        <h2>Timer</h2>\n        <Timer />\n      </TabPane>\n      <TabPane\n        tab={(\n          <span>\n            <RocketOutlined />\n            Countdown\n          </span>\n        )}\n        key=\"2\"\n      >\n        <h2>Countdown</h2>\n        <Countdown />\n      </TabPane>\n    </Tabs>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.06b43fd4.png\";"],"sourceRoot":""}