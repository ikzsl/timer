{"version":3,"sources":["components/countdown/countdown.mp3","utils/utils.js","components/timer/timer.js","components/countdown-input/countdown-input.js","components/countdown/countdown.js","App.js","index.js","logo.png"],"names":["module","exports","calculateProgress","total","period","Math","floor","Timer","state","isPaused","startTime","Date","now","elapsedTime","isStopped","onMainButtonClick","poll","setInterval","tick","setState","prevState","clearInterval","onResetClick","this","mainButtonLabel","milliseconds","toString","slice","millisecondsDevider","seconds","secondsDevider","minutes","minutesDevider","resetButton","shape","size","type","onClick","className","length","React","Component","CountdownInput","props","minutesMax","secondsMax","totalSeconds","sliderMax","sliderStep","onMinutesInputChange","onSecondsInputChange","onSliderChange","disabled","min","max","style","margin","value","onChange","tooltipVisible","step","defaultProps","sound","Howl","src","clip","loop","Countdown","stop","play","displayMinutes","calculateDisplayMinutes","displaySeconds","calculateDisplaySeconds","percent","TabPane","Tabs","App","logo","alt","defaultActiveKey","tab","ClockCircleOutlined","key","RocketOutlined","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.459943d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/countdown.d79d826a.mp3\";","export const secondsDevider = (period) => Math.floor((period / 1000) % 60);\nexport const minutesDevider = (period) => Math.floor(((period / 1000) % (60 * 60)) / 60);\nexport const millisecondsDevider = (period) => period.toString().slice(-3);\n\nexport const calculateDisplayMinutes = (total, period) => Math.floor((total - period) / 60);\nexport const calculateDisplaySeconds = (total, period) => (total - period) % 60;\nexport const calculateProgress = (total, period) => Math.floor((100 * period) / total);\n","import React from 'react';\nimport { Button } from 'antd';\n\nimport { millisecondsDevider, secondsDevider, minutesDevider } from '../../utils/utils';\n\nimport './timer.scss';\n\nclass Timer extends React.Component {\n  state = {\n    isPaused: true,\n    startTime: Date.now(),\n    period: '000',\n    elapsedTime: 0,\n    isStopped: true,\n  };\n\n  onMainButtonClick = () => {\n    const { isPaused } = this.state;\n\n    if (isPaused === true) {\n      this.poll = setInterval(this.tick, 57);\n      this.setState({\n        startTime: Date.now(),\n        isStopped: false,\n      });\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n      }));\n    }\n\n    if (isPaused === false) {\n      clearInterval(this.poll);\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n        elapsedTime: prevState.period,\n      }));\n    }\n\n    this.setState((prevState) => ({\n      isPaused: !prevState.isPaused,\n    }));\n  };\n\n  onResetClick = () => {\n    clearInterval(this.poll);\n    this.setState({\n      period: '000',\n      elapsedTime: 0,\n      isStopped: true,\n      isPaused: true,\n    });\n  };\n\n  tick = () => {\n    this.setState((prevState) => ({\n      period: prevState.elapsedTime + (Date.now() - prevState.startTime),\n    }));\n  };\n\n  render() {\n    const { isPaused, period, isStopped } = this.state;\n\n    const mainButtonLabel = isPaused ? 'Start' : 'Pause';\n    const milliseconds = millisecondsDevider(period);\n    const seconds = secondsDevider(period);\n    const minutes = minutesDevider(period);\n    const resetButton = (\n      <Button\n        shape=\"round\"\n        size=\"large\"\n        type=\"primary\"\n        onClick={this.onResetClick}\n        className=\"button\"\n      >\n        Reset\n      </Button>\n    );\n\n    return (\n      <div className=\"timer-container\">\n        <div className=\"display\">\n          <span>{minutes < 10 ? `0${minutes}` : minutes}</span>\n          <span>\n            :\n            {seconds < 10 ? `0${seconds}` : seconds}\n          </span>\n          <span>\n            :\n            {milliseconds.length < 3 ? `0${milliseconds}` : milliseconds}\n          </span>\n        </div>\n        <div className=\"buttons\">\n          <Button\n            shape=\"round\"\n            size=\"large\"\n            type=\"primary\"\n            onClick={this.onMainButtonClick}\n            className=\"button\"\n          >\n            {mainButtonLabel}\n          </Button>\n\n          {isStopped ? null : resetButton}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slider, InputNumber } from 'antd';\n\nimport './countdown-input.scss';\n\nconst CountdownInput = (props) => {\n  const {\n    isStopped,\n    minutes,\n    minutesMax,\n    seconds,\n    secondsMax,\n    totalSeconds,\n    sliderMax,\n    sliderStep,\n    onMinutesInputChange,\n    onSecondsInputChange,\n    onSliderChange,\n  } = props;\n\n  return (\n    <div className=\"countdown-input-container\">\n      <InputNumber\n        type=\"number\"\n        disabled={!isStopped}\n        min={0}\n        max={minutesMax}\n        style={{ margin: '0 16px' }}\n        value={minutes}\n        onChange={onMinutesInputChange}\n      />\n      :\n      <InputNumber\n        type=\"number\"\n        disabled={!isStopped}\n        min={0}\n        max={secondsMax}\n        style={{ margin: '0 16px' }}\n        value={seconds}\n        onChange={onSecondsInputChange}\n      />\n      <Slider\n        disabled={!isStopped}\n        tooltipVisible={false}\n        step={sliderStep}\n        min={0}\n        max={sliderMax}\n        onChange={onSliderChange}\n        value={totalSeconds || 0}\n      />\n    </div>\n  );\n};\n\nCountdownInput.defaultProps = {\n  isStopped: true,\n  minutes: 0,\n  minutesMax: 0,\n  seconds: 0,\n  secondsMax: 0,\n  totalSeconds: 0,\n  sliderMax: 0,\n  sliderStep: 0,\n};\n\nCountdownInput.propTypes = {\n  isStopped: PropTypes.bool,\n  minutes: PropTypes.number,\n  minutesMax: PropTypes.number,\n  seconds: PropTypes.number,\n  secondsMax: PropTypes.number,\n  totalSeconds: PropTypes.number,\n  sliderMax: PropTypes.number,\n  sliderStep: PropTypes.number,\n  onMinutesInputChange: PropTypes.func.isRequired,\n  onSecondsInputChange: PropTypes.func.isRequired,\n  onSliderChange: PropTypes.func.isRequired,\n};\n\nexport default CountdownInput;\n","import React from 'react';\nimport { Button, Progress } from 'antd';\nimport { Howl } from 'howler';\nimport CountdownInput from '../countdown-input/countdown-input';\nimport {\n  calculateDisplayMinutes,\n  calculateDisplaySeconds,\n  calculateProgress,\n} from '../../utils/utils';\n\nimport './countdown.scss';\n\nimport clip from './countdown.mp3';\n\nconst sound = new Howl({\n  src: [clip],\n  loop: true,\n});\n\nclass Countdown extends React.Component {\n  state = {\n    minutes: 0,\n    seconds: 0,\n    totalSeconds: 0,\n    isPaused: true,\n    isStopped: true,\n    startTime: Date.now(),\n    period: 0,\n    elapsedTime: 0,\n  };\n\n  onMinutesInputChange = (value) => {\n    this.setState((prevState) => ({\n      minutes: value,\n      totalSeconds: value * 60 + prevState.seconds,\n    }));\n  };\n\n  onSecondsInputChange = (value) => {\n    this.setState((prevState) => ({\n      seconds: value,\n      totalSeconds: prevState.minutes * 60 + value,\n    }));\n  };\n\n  onSliderChange = (value) => {\n    this.setState({\n      totalSeconds: value,\n      minutes: Math.floor(value / 60),\n      seconds: value % 60,\n    });\n  };\n\n  onMainButtonClick = () => {\n    const { isPaused } = this.state;\n\n    if (isPaused === true) {\n      this.poll = setInterval(this.tick, 57);\n      this.setState({\n        startTime: Date.now(),\n        isStopped: false,\n      });\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n      }));\n    }\n\n    if (isPaused === false) {\n      clearInterval(this.poll);\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n        elapsedTime: prevState.period,\n      }));\n    }\n\n    this.setState((prevState) => ({\n      isPaused: !prevState.isPaused,\n    }));\n  };\n\n  onResetClick = () => {\n    clearInterval(this.poll);\n    sound.stop();\n    this.setState({\n      isStopped: true,\n      isPaused: true,\n      period: 0,\n      elapsedTime: 0,\n      totalSeconds: 0,\n      seconds: 0,\n      minutes: 0,\n    });\n  };\n\n  tick = () => {\n    const { period, totalSeconds } = this.state;\n    if (period >= totalSeconds) {\n      clearInterval(this.poll);\n\n      this.setState({\n        isPaused: true,\n        period: 0,\n      });\n      sound.play();\n    }\n    this.setState((prevState) => ({\n      period: Math.floor(prevState.elapsedTime + (Date.now() - prevState.startTime) / 1000),\n    }));\n  };\n\n  render() {\n    const {\n      isPaused, isStopped, period, totalSeconds, minutes, seconds,\n    } = this.state;\n    const displayMinutes = calculateDisplayMinutes(totalSeconds, period);\n    const displaySeconds = calculateDisplaySeconds(totalSeconds, period);\n    const mainButtonLabel = isPaused ? 'Start' : 'Pause';\n    const resetButton = (\n      <Button\n        shape=\"round\"\n        size=\"large\"\n        type=\"primary\"\n        onClick={this.onResetClick}\n        className=\"button\"\n      >\n        Reset\n      </Button>\n    );\n\n    return (\n      <div className=\"countdown-container\">\n        <div className=\"countdown-result\">\n          <Progress type=\"circle\" percent={calculateProgress(totalSeconds, period)} />\n          <div className=\"display\">\n            {`${displayMinutes < 10 ? `0${displayMinutes}` : displayMinutes}:${\n              displaySeconds < 10 ? `0${displaySeconds}` : displaySeconds\n            }`}\n          </div>\n        </div>\n        <CountdownInput\n          isStopped={isStopped}\n          minutes={minutes}\n          minutesMax={720}\n          seconds={seconds}\n          secondsMax={59}\n          totalSeconds={totalSeconds}\n          sliderMax={3600}\n          sliderStep={15}\n          onMinutesInputChange={this.onMinutesInputChange}\n          onSecondsInputChange={this.onSecondsInputChange}\n          onSliderChange={this.onSliderChange}\n        />\n        <Button\n          disabled={!(totalSeconds - period)}\n          shape=\"round\"\n          size=\"large\"\n          type=\"primary\"\n          onClick={this.onMainButtonClick}\n          className=\"button\"\n        >\n          {mainButtonLabel}\n        </Button>\n        {isStopped ? null : resetButton}\n      </div>\n    );\n  }\n}\n\nexport default Countdown;\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport { ClockCircleOutlined, RocketOutlined } from '@ant-design/icons';\nimport logo from './logo.png';\nimport './App.scss';\nimport Timer from './components/timer/timer';\nimport Countdown from './components/countdown/countdown';\n\nconst { TabPane } = Tabs;\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    </header>\n\n    <Tabs defaultActiveKey=\"1\">\n      <TabPane\n        tab={(\n          <span>\n            <ClockCircleOutlined />\n            Timer\n          </span>\n        )}\n        key=\"1\"\n      >\n        <h2>Timer</h2>\n        <Timer />\n      </TabPane>\n      <TabPane\n        tab={(\n          <span>\n            <RocketOutlined />\n            Countdown\n          </span>\n        )}\n        key=\"2\"\n      >\n        <h2>Countdown</h2>\n        <Countdown />\n      </TabPane>\n    </Tabs>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.06b43fd4.png\";"],"sourceRoot":""}