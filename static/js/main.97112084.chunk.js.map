{"version":3,"sources":["components/timer.js","components/countdown.js","App.js","index.js","logo.png"],"names":["Timer","state","isPaused","startTime","Date","now","period","elapsedTime","onMainButtonClick","poll","setInterval","tick","setState","prevState","clearInterval","onResetClick","this","mainButtonLabel","milliseconds","toString","slice","seconds","Math","floor","minutes","className","length","type","onClick","React","Component","Countdown","inputValue1","inputValue2","onChange1","value","onChange2","min","max","onChange","style","margin","TabPane","Tabs","App","src","logo","alt","defaultActiveKey","tab","ClockCircleOutlined","key","RocketOutlined","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.97112084.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'antd';\n\nimport './timer.scss';\n\nclass Timer extends React.Component {\n  state = {\n    isPaused: true,\n    startTime: Date.now(),\n    period: '000',\n    elapsedTime: 0,\n  };\n\n  onMainButtonClick = () => {\n    const { isPaused } = this.state;\n\n    if (isPaused === true) {\n      this.poll = setInterval(this.tick, 57);\n      this.setState({\n        startTime: Date.now(),\n      });\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n      }));\n    }\n\n    if (isPaused === false) {\n      clearInterval(this.poll);\n\n      this.setState((prevState) => ({\n        period: prevState.period,\n        elapsedTime: prevState.period,\n      }));\n    }\n\n    this.setState((prevState) => ({\n      isPaused: !prevState.isPaused,\n    }));\n  };\n\n  onResetClick = () => {\n    const { isPaused } = this.state;\n\n    if (isPaused === false) {\n      clearInterval(this.poll);\n      this.setState((prevState) => ({\n        period: prevState.period,\n        elapsedTime: prevState.period,\n        isPaused: true,\n      }));\n    }\n\n    if (isPaused === true) {\n      this.setState({\n        period: '000',\n        elapsedTime: 0,\n      });\n    }\n  };\n\n  tick = () => {\n    this.setState((prevState) => ({\n      period: prevState.elapsedTime + (Date.now() - prevState.startTime),\n    }));\n  };\n\n  render() {\n    const { isPaused, period } = this.state;\n\n    const mainButtonLabel = isPaused ? 'Start' : 'Pause';\n    const milliseconds = period.toString().slice(-3);\n    const seconds = Math.floor((period / 1000) % 60);\n    const minutes = Math.floor(((period / 1000) % (60 * 60)) / 60);\n\n    return (\n      <div className=\"container\">\n        <div className=\"display\">\n          <span>{minutes < 10 ? `0${minutes}` : minutes}</span>\n          <span>\n            :\n            {seconds < 10 ? `0${seconds}` : seconds}\n          </span>\n          <span>\n            :\n            {milliseconds.length < 3 ? `0${milliseconds}` : milliseconds}\n          </span>\n        </div>\n\n        <Button type=\"primary\" onClick={this.onMainButtonClick} className=\"button\">\n          {mainButtonLabel}\n        </Button>\n        <Button type=\"primary\" onClick={this.onResetClick} className=\"button\">\n          Reset\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Timer;\n","import React from 'react';\nimport { Slider, InputNumber, Button } from 'antd';\n\nclass Countdown extends React.Component {\n  state = {\n    inputValue1: 1,\n    inputValue2: 1,\n  };\n\n  onChange1 = (value) => {\n    this.setState({\n      inputValue1: value,\n    });\n  };\n\n  onChange2 = (value) => {\n    this.setState({\n      inputValue2: value,\n    });\n  };\n\n  render() {\n    const { inputValue1, inputValue2 } = this.state;\n    return (\n      <div className=\"container\">\n        <Slider\n          min={1}\n          max={60}\n          onChange={this.onChange1}\n          value={typeof inputValue1 === 'number' ? inputValue1 : 0}\n        />\n        <InputNumber\n          min={1}\n          max={60}\n          style={{ margin: '0 16px' }}\n          value={inputValue1}\n          onChange={this.onChange1}\n        />\n        <Button type=\"primary\">Button</Button>\n\n        <Slider\n          min={1}\n          max={60}\n          onChange={this.onChange2}\n          value={typeof inputValue2 === 'number' ? inputValue2 : 0}\n        />\n        <InputNumber\n          min={1}\n          max={60}\n          style={{ margin: '0 16px' }}\n          value={inputValue2}\n          onChange={this.onChange2}\n        />\n        <Button type=\"primary\">Button</Button>\n      </div>\n    );\n  }\n}\n\nexport default Countdown;\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport { ClockCircleOutlined, RocketOutlined } from '@ant-design/icons';\nimport logo from './logo.png';\nimport './App.scss';\nimport Timer from './components/timer';\nimport Countdown from './components/countdown';\n\nconst { TabPane } = Tabs;\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1>Timer bl</h1>\n    </header>\n\n    <Tabs defaultActiveKey=\"1\">\n      <TabPane\n        tab={(\n          <span>\n            <ClockCircleOutlined />\n            Timer\n          </span>\n        )}\n        key=\"1\"\n      >\n        <h2>Timer</h2>\n        <Timer />\n      </TabPane>\n      <TabPane\n        tab={(\n          <span>\n            <RocketOutlined />\n            Countdown\n          </span>\n        )}\n        key=\"2\"\n      >\n        <h2>Countdown</h2>\n        <Countdown />\n      </TabPane>\n    </Tabs>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.d977555c.png\";"],"sourceRoot":""}